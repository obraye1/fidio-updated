import{initialize}from"../utility/socket/index";import React,{useRef,useEffect}from"react";const SocketContainer=c=>{const r=c["_socket"];let n=useRef(!1);useRef(null);const[i,l]=React.useState(null),e=(useEffect(()=>{!n.current&&c._loggedIn&&c.dborigin&&e()},[r,n.current,c._loggedIn,c.dborigin]),()=>new Promise((e,o)=>{r.connected&&c._loggedIn&&c.dborigin&&initialize(r,c._loggedIn,c.dborigin),r.on("connect",e=>{console.log("Connected to socket ∞¦∞",r),n.current=!0,setTimeout(()=>{initialize(r,c._loggedIn,c.dborigin)},300)},{reconnectionAttempts:5}),r.on("disconnect",e=>{console.log("Disconnected from socket",r),i||"io server disconnect"===e&&(n.current=!1,e=setTimeout(()=>{r.connect(),l(null)},5e3),l(e))}),r.on("connect_error",e=>{console.log("Connection failed",e),n.current=!1;e=setTimeout(()=>{t(),l(null)},5e3);l(e)});let t=(e=5e3)=>{setTimeout(()=>{r.connect()},e)};return e()}));return useEffect(()=>{if(r){const e=e=>{console.log(e),c.setRooms&&c.setRooms(e)},o=e=>{console.log(e)},t=e=>{c.setRooms&&(console.log("Rooms",e),c.setRooms(e)),setTimeout(()=>{e?.log&&c._LocalEventEmitter.dispatch("receive_chat",e.log)},250)},n=e=>{console.log("Receive",e),e?.log&&c._LocalEventEmitter.dispatch("receive_chat",e.log)},i=e=>{console.log(e),e?.tables&&c._LocalEventEmitter.dispatch("receive_ban_table",e.tables)};return r.on("returnInitialize",e),r.on("returnNotify",o),r.on("joinChat",t),r.on("receiveChat",n),r.on("receiveBanTable",i),()=>{r.off("returnInitialize",e),r.off("returnNotify",o),r.off("joinChat",t),r.off("receiveChat",n),r.off("receiveBanTable",i)}}},[c._loggedIn,c.setRooms]),React.createElement("div",null)};export default SocketContainer;